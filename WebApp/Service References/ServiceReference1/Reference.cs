//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/ServiceApp")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsAmbassadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferencedByEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReferencedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsAmbassador {
            get {
                return this.IsAmbassadorField;
            }
            set {
                if ((this.IsAmbassadorField.Equals(value) != true)) {
                    this.IsAmbassadorField = value;
                    this.RaisePropertyChanged("IsAmbassador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferencedByEmail {
            get {
                return this.ReferencedByEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferencedByEmailField, value) != true)) {
                    this.ReferencedByEmailField = value;
                    this.RaisePropertyChanged("ReferencedByEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReferencedById {
            get {
                return this.ReferencedByIdField;
            }
            set {
                if ((this.ReferencedByIdField.Equals(value) != true)) {
                    this.ReferencedByIdField = value;
                    this.RaisePropertyChanged("ReferencedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/ServiceApp")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResidencialAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtNum {
            get {
                return this.ExtNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtNumField, value) != true)) {
                    this.ExtNumField = value;
                    this.RaisePropertyChanged("ExtNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntNum {
            get {
                return this.IntNumField;
            }
            set {
                if ((object.ReferenceEquals(this.IntNumField, value) != true)) {
                    this.IntNumField = value;
                    this.RaisePropertyChanged("IntNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResidencialArea {
            get {
                return this.ResidencialAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.ResidencialAreaField, value) != true)) {
                    this.ResidencialAreaField = value;
                    this.RaisePropertyChanged("ResidencialArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((this.ZipCodeField.Equals(value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserAuthentication", ReplyAction="http://tempuri.org/IService1/UserAuthenticationResponse")]
        bool UserAuthentication(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserAuthentication", ReplyAction="http://tempuri.org/IService1/UserAuthenticationResponse")]
        System.Threading.Tasks.Task<bool> UserAuthenticationAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReferralsByCustomerEmail", ReplyAction="http://tempuri.org/IService1/GetReferralsByCustomerEmailResponse")]
        System.Collections.Generic.List<WebApp.ServiceReference1.Customer> GetReferralsByCustomerEmail(string customerEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReferralsByCustomerEmail", ReplyAction="http://tempuri.org/IService1/GetReferralsByCustomerEmailResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.ServiceReference1.Customer>> GetReferralsByCustomerEmailAsync(string customerEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NewReferral", ReplyAction="http://tempuri.org/IService1/NewReferralResponse")]
        void NewReferral(WebApp.ServiceReference1.Customer customer, WebApp.ServiceReference1.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NewReferral", ReplyAction="http://tempuri.org/IService1/NewReferralResponse")]
        System.Threading.Tasks.Task NewReferralAsync(WebApp.ServiceReference1.Customer customer, WebApp.ServiceReference1.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CustomerMailExists", ReplyAction="http://tempuri.org/IService1/CustomerMailExistsResponse")]
        bool CustomerMailExists(string userMail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CustomerMailExists", ReplyAction="http://tempuri.org/IService1/CustomerMailExistsResponse")]
        System.Threading.Tasks.Task<bool> CustomerMailExistsAsync(string userMail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserAddresses", ReplyAction="http://tempuri.org/IService1/GetUserAddressesResponse")]
        System.Collections.Generic.List<WebApp.ServiceReference1.Address> GetUserAddresses(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserAddresses", ReplyAction="http://tempuri.org/IService1/GetUserAddressesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.ServiceReference1.Address>> GetUserAddressesAsync(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAddresses", ReplyAction="http://tempuri.org/IService1/GetAllAddressesResponse")]
        System.Collections.Generic.List<WebApp.ServiceReference1.Address> GetAllAddresses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAddresses", ReplyAction="http://tempuri.org/IService1/GetAllAddressesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.ServiceReference1.Address>> GetAllAddressesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserRoles", ReplyAction="http://tempuri.org/IService1/GetUserRolesResponse")]
        System.Collections.Generic.List<string> GetUserRoles(string userMail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserRoles", ReplyAction="http://tempuri.org/IService1/GetUserRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetUserRolesAsync(string userMail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCutomers", ReplyAction="http://tempuri.org/IService1/GetAllCutomersResponse")]
        System.Collections.Generic.List<WebApp.ServiceReference1.Customer> GetAllCutomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCutomers", ReplyAction="http://tempuri.org/IService1/GetAllCutomersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.ServiceReference1.Customer>> GetAllCutomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCustomerStatus", ReplyAction="http://tempuri.org/IService1/UpdateCustomerStatusResponse")]
        void UpdateCustomerStatus(System.Collections.Generic.Dictionary<int, int> customerList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCustomerStatus", ReplyAction="http://tempuri.org/IService1/UpdateCustomerStatusResponse")]
        System.Threading.Tasks.Task UpdateCustomerStatusAsync(System.Collections.Generic.Dictionary<int, int> customerList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePasswordByUserEmail", ReplyAction="http://tempuri.org/IService1/ChangePasswordByUserEmailResponse")]
        void ChangePasswordByUserEmail(string userMail, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePasswordByUserEmail", ReplyAction="http://tempuri.org/IService1/ChangePasswordByUserEmailResponse")]
        System.Threading.Tasks.Task ChangePasswordByUserEmailAsync(string userMail, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomerById", ReplyAction="http://tempuri.org/IService1/GetCustomerByIdResponse")]
        WebApp.ServiceReference1.Customer GetCustomerById(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomerById", ReplyAction="http://tempuri.org/IService1/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<WebApp.ServiceReference1.Customer> GetCustomerByIdAsync(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAddressByOwnerId", ReplyAction="http://tempuri.org/IService1/GetAddressByOwnerIdResponse")]
        WebApp.ServiceReference1.Address GetAddressByOwnerId(int ownerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAddressByOwnerId", ReplyAction="http://tempuri.org/IService1/GetAddressByOwnerIdResponse")]
        System.Threading.Tasks.Task<WebApp.ServiceReference1.Address> GetAddressByOwnerIdAsync(int ownerId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebApp.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebApp.ServiceReference1.IService1>, WebApp.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UserAuthentication(string email, string password) {
            return base.Channel.UserAuthentication(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> UserAuthenticationAsync(string email, string password) {
            return base.Channel.UserAuthenticationAsync(email, password);
        }
        
        public System.Collections.Generic.List<WebApp.ServiceReference1.Customer> GetReferralsByCustomerEmail(string customerEmail) {
            return base.Channel.GetReferralsByCustomerEmail(customerEmail);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.ServiceReference1.Customer>> GetReferralsByCustomerEmailAsync(string customerEmail) {
            return base.Channel.GetReferralsByCustomerEmailAsync(customerEmail);
        }
        
        public void NewReferral(WebApp.ServiceReference1.Customer customer, WebApp.ServiceReference1.Address address) {
            base.Channel.NewReferral(customer, address);
        }
        
        public System.Threading.Tasks.Task NewReferralAsync(WebApp.ServiceReference1.Customer customer, WebApp.ServiceReference1.Address address) {
            return base.Channel.NewReferralAsync(customer, address);
        }
        
        public bool CustomerMailExists(string userMail) {
            return base.Channel.CustomerMailExists(userMail);
        }
        
        public System.Threading.Tasks.Task<bool> CustomerMailExistsAsync(string userMail) {
            return base.Channel.CustomerMailExistsAsync(userMail);
        }
        
        public System.Collections.Generic.List<WebApp.ServiceReference1.Address> GetUserAddresses(string userEmail) {
            return base.Channel.GetUserAddresses(userEmail);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.ServiceReference1.Address>> GetUserAddressesAsync(string userEmail) {
            return base.Channel.GetUserAddressesAsync(userEmail);
        }
        
        public System.Collections.Generic.List<WebApp.ServiceReference1.Address> GetAllAddresses() {
            return base.Channel.GetAllAddresses();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.ServiceReference1.Address>> GetAllAddressesAsync() {
            return base.Channel.GetAllAddressesAsync();
        }
        
        public System.Collections.Generic.List<string> GetUserRoles(string userMail) {
            return base.Channel.GetUserRoles(userMail);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetUserRolesAsync(string userMail) {
            return base.Channel.GetUserRolesAsync(userMail);
        }
        
        public System.Collections.Generic.List<WebApp.ServiceReference1.Customer> GetAllCutomers() {
            return base.Channel.GetAllCutomers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.ServiceReference1.Customer>> GetAllCutomersAsync() {
            return base.Channel.GetAllCutomersAsync();
        }
        
        public void UpdateCustomerStatus(System.Collections.Generic.Dictionary<int, int> customerList) {
            base.Channel.UpdateCustomerStatus(customerList);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerStatusAsync(System.Collections.Generic.Dictionary<int, int> customerList) {
            return base.Channel.UpdateCustomerStatusAsync(customerList);
        }
        
        public void ChangePasswordByUserEmail(string userMail, string password) {
            base.Channel.ChangePasswordByUserEmail(userMail, password);
        }
        
        public System.Threading.Tasks.Task ChangePasswordByUserEmailAsync(string userMail, string password) {
            return base.Channel.ChangePasswordByUserEmailAsync(userMail, password);
        }
        
        public WebApp.ServiceReference1.Customer GetCustomerById(int customerId) {
            return base.Channel.GetCustomerById(customerId);
        }
        
        public System.Threading.Tasks.Task<WebApp.ServiceReference1.Customer> GetCustomerByIdAsync(int customerId) {
            return base.Channel.GetCustomerByIdAsync(customerId);
        }
        
        public WebApp.ServiceReference1.Address GetAddressByOwnerId(int ownerId) {
            return base.Channel.GetAddressByOwnerId(ownerId);
        }
        
        public System.Threading.Tasks.Task<WebApp.ServiceReference1.Address> GetAddressByOwnerIdAsync(int ownerId) {
            return base.Channel.GetAddressByOwnerIdAsync(ownerId);
        }
    }
}
